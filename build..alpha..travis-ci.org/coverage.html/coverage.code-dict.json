{"/home/travis/build/npmtest/node-npmtest-matcha/test.js":"/* istanbul instrument in package npmtest_matcha */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-matcha/lib.npmtest_matcha.js":"/* istanbul instrument in package npmtest_matcha */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_matcha = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_matcha = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-matcha/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-matcha && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_matcha */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_matcha\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_matcha.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_matcha.rollup.js'] =\n            local.assetsDict['/assets.npmtest_matcha.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_matcha.__dirname + '/lib.npmtest_matcha.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/index.js":"module.exports = require('./lib/matcha');","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/lib/matcha.js":"/*!\n * Matcha\n * Copyright(c) 2012 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nexports.version = '0.6.0';\nexports.Bench = require('./matcha/bench');\nexports.Suite = require('./matcha/suite');\nexports.Runner = require('./matcha/runner');\nexports.utils = require('./matcha/utils');\n\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/lib/matcha/bench.js":"/*!\n * Matcha - Benchmark Constructor\n * Copyright(c) 2011-2012 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * External Dependancies\n */\n\nvar EventEmitter = require('events').EventEmitter\n  , util = require('util');\n\n/*!\n * Internal Dependancies\n */\n\nvar Timer = require('./timer');\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = Bench;\n\nfunction Bench (title, fn) {\n  EventEmitter.call(this);\n  this.title = title;\n  this.fn = fn;\n}\n\n/*!\n * Inherits from `EventEmitter`\n */\n\nutil.inherits(Bench, EventEmitter);\n\n/**\n * .run (cb)\n *\n * Run a bench.\n *\n * @param {Function} callback\n */\n\nBench.prototype.run = function (cb) {\n  var self = this\n    , opts = this.parent.options\n    , runner = opts.type === 'static'\n      ? runStatic\n      : runAdaptive\n\n  cb = cb || function () {};\n\n  function report (total, elapsed) {\n    var stats = {\n        iterations: total\n      , elapsed: elapsed\n      , title: self.title\n      , ops: Math.round(total / elapsed * 1000)\n    };\n    self.stats = stats;\n    self.emit('end', stats);\n    cb(stats);\n  }\n\n  runner.call(this, report);\n};\n\n/*!\n * runStatic (timer, cb)\n *\n * Run this bench as  static (set iterations).\n *\n * @param {Function} callback\n * @api private\n */\n\nfunction runStatic (cb) {\n  var self = this\n    , parent = this.parent\n    , iterations = parent.options.iterations\n    , concurrency = parent.options.concurrency\n    , pending = iterations\n    , timer = new Timer()\n    , total = 0;\n\n  var runner = this.fn.length === 0\n    ? doSync\n    : doAsync;\n\n  function next (total) {\n    cb(total, timer.stop().elapsed);\n  }\n\n  this.emit('start');\n  timer.start();\n  runner(this.fn, pending, concurrency, next);\n}\n\n/*!\n * runStatic (timer, cb)\n *\n * Run this bench as adaptive: minimum\n * iterations then scale up to meet minimum\n * time frame.\n *\n * @param {Function} callback\n * @api private\n */\n\nfunction runAdaptive (cb) {\n  var self = this\n    , parent = this.parent\n    , duration = parent.options.mintime\n    , iterations = parent.options.iterations\n    , concurrency = parent.options.concurrency\n    , pending = iterations\n    , timer = new Timer()\n    , total = 0;\n\n  var runner = this.fn.length === 0\n    ? doSync\n    : doAsync\n\n  function next (count) {\n    total += count;\n    if (timer.stop().elapsed < duration) {\n      var pending = Math.round(count * (duration / (timer.elapsed + 1)));\n      runner(self.fn, pending, concurrency, next);\n    } else {\n      cb(total, timer.elapsed);\n    }\n  }\n\n  this.emit('start');\n  timer.start();\n  runner(this.fn, pending, concurrency, next);\n}\n\n/*!\n * doSync (fn, iterations, next)\n *\n * Run a syncronous bench function\n * a set number of iterations.\n *\n * @param {Function} bench function\n * @param {Number} iterations\n * @param {Function} callback when done\n * @api private\n */\n\nfunction doSync (fn, iterations, concurrency, next) {\n  var i = iterations;\n  while (i--) { fn(); }\n  next(iterations);\n}\n\n/*!\n * doAsync (fn, iterations, next)\n *\n * Run an asyncronous bench function\n * a set number of iterations.\n *\n * @param {Function} bench function\n * @param {Number} iterations\n * @param {Function} callback when done\n * @api private\n */\n\nfunction doAsync (fn, iterations, concurrency, next) {\n  var running = pending = iterations;\n\n  function iterate () {\n    if (!pending) return next(iterations)\n    if (!running) return;\n    --running;\n    fn(function () {\n      --pending;\n      iterate();\n    });\n  }\n\n  for (var i = 0; i < concurrency; ++i) {\n    iterate();\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/lib/matcha/timer/index.js":"module.exports = process && 'function' === typeof process.hrtime\n  ? require('./hrtimer')\n  : require('./date');\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/lib/matcha/timer/hrtimer.js":"/*!\n * Matcha - High-res timer for Node.js\n * Copyright(c) 2012 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Primary Export\n */\n\nmodule.exports = Timer;\n\n/**\n * Timer (constructor)\n *\n * Constructs a timer that will return a high accuracy\n * elapsed calculation.\n *\n * @api public\n */\n\nfunction Timer () {\n  this._start = null;\n  this._elapsed = null;\n}\n\n/**\n * .elapsed\n *\n * Calculate the milliseconds elapsed time\n * for the given elapsed hrdiff.\n *\n * @returns Number ms elapsed since start\n */\n\nObject.defineProperty(Timer.prototype, 'elapsed',\n  { get: function () {\n      if (!this._elapsed) return null;\n      var el = this._elapsed;\n      return el[0] * 1000 + el[1] / 1000 / 1000;\n    }\n});\n\n/**\n * .start ()\n *\n * Mark the starting point for this timer.\n *\n * @api public\n */\n\nTimer.prototype.start = function () {\n  this._start = process.hrtime();\n  return this;\n};\n\n/**\n * .stop ()\n *\n * Mark the stopping point for this timer.\n * using hrtimes built in differ capability.\n *\n * @api public\n */\n\nTimer.prototype.stop = function () {\n  this._elapsed = process.hrtime(this._start);\n  return this;\n};\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/lib/matcha/suite.js":"/*!\n * Matcha - Suite Constructor\n * Copyright(c) 2011-2012 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * External Dependancies\n */\n\nvar EventEmitter = require('events').EventEmitter\n  , util = require('util');\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = Suite;\n\nfunction Suite (title) {\n  this.title = title || '';\n  this.benches = [];\n  this.suites = [];\n  this.before = [];\n  this.after = [];\n  this.options = {\n      type: 'adaptive'\n    , iterations: 100\n    , concurrency: 1\n    , mintime: 500\n    , delay: 100\n  };\n}\n\n/**\n * Suite.create (parent, title)\n *\n * Export helper to automatically create a new\n * suite and add it to a given parent. Used\n * by interfaces.\n *\n * @param {Suite} parent\n * @param {String} title\n * @api public\n */\n\nSuite.create = function (parent, title) {\n  var suite = new Suite(title);\n  parent.addSuite(suite);\n  return suite;\n}\n\n/*!\n * Inherits from `EventEmitter`\n */\n\nutil.inherits(Suite, EventEmitter);\n\n/**\n * .addSuite (suite)\n *\n * Add another instance of a suite as a child\n * of the current suite.\n *\n * @param {Suite} constructed suite\n * @name addSuite\n * @api public\n */\n\nSuite.prototype.addSuite = function (suite) {\n  suite.parent = this;\n  this.suites.push(suite);\n};\n\n/**\n * .addBench (bench)\n *\n * Add a constructed bench as a child of the\n * current suite. Will use this suite's options\n * during it's run.\n *\n * @param {Bench} constructed benchmark\n * @name addBench\n * @api public\n */\n\nSuite.prototype.addBench = function (bench) {\n  bench.parent = this;\n  this.benches.push(bench);\n};\n\n/**\n * .setOption (key, value)\n *\n * Set an option of this suite to a given value.\n * All immediate children benches will use these\n * options.\n *\n * @param {String} key\n * @param {Mixed} value\n * @name setOption\n * @api public\n */\n\nSuite.prototype.setOption = function (key, value) {\n  this.options[key] = value;\n};\n\n/**\n * .addBefore (fn)\n *\n * Add a function to be invoked before this suite\n * is ran. Can be async.\n *\n * @param {Function} function\n * @name addBefore\n * @api public\n */\n\nSuite.prototype.addBefore = function (fn) {\n  this.before.push(fn);\n};\n\n/**\n * .addAfter (fn)\n *\n * Add a function to be invoked after this suite\n * is ran. Can be async.\n *\n * @param {Function} function\n * @name addAfter\n * @api public\n */\n\nSuite.prototype.addAfter = function (fn) {\n  this.after.push(fn);\n};\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/lib/matcha/runner.js":"/*!\n * Matcha - Benchmark Constructor\n * Copyright(c) 2011-2012 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * External Dependancies\n */\n\nvar EventEmitter = require('events').EventEmitter\n  , util = require('util')\n  , Timer = require('./timer');\n\n/*!\n * Internal Dependancies\n */\n\nvar series = require('./utils').series;\n\n/*!\n * proxy (from, to, event)\n *\n * Proxy an event from one object to another.\n *\n * @param {EventEmitter} from\n * @param {EventEmitter} to\n * @param {String} event\n * @api private\n */\n\nfunction proxy (from, to, ev) {\n  from.on(ev, function () {\n    var args = Array.prototype.slice.call(arguments)\n      , event = [ ev ].concat(args);\n    to.emit.apply(to, event);\n  });\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = Runner;\n\nfunction Runner (suite) {\n  this.suite = suite;\n}\n\n/*!\n * Inherits from `EventEmitter`\n */\n\nutil.inherits(Runner, EventEmitter);\n\n/**\n * .run (callback)\n *\n * Start the entire run sequence for a given\n * suite. The callback will be called upon\n * completion. Will call in the following order:\n *\n * - before hooks\n * - benches\n * - suites\n * - after hooks\n *\n * @param {Function} callback\n * @name run\n * @api public\n */\n\nRunner.prototype.run = function (cb) {\n  var self = this;\n\n  var stats = this.stats = { suites: 0, benches: 0 };\n\n\n  function iterator (fn, next) {\n    fn(next);\n  }\n\n  this.on('bench start', function() {\n    stats.benches++;\n  });\n\n  function done (err) {\n    if (err) throw err;\n    stats.elapsed = self.timer.stop().elapsed;\n    self.emit('end', stats);\n    cb()\n  }\n\n  this.timer = new Timer().start();\n  this.emit('start');\n\n  series([\n      this.runBefore.bind(this)\n    , this.runBenches.bind(this)\n    , this.runSuites.bind(this)\n    , this.runAfter.bind(this)\n  ], iterator, done);\n};\n\n/**\n * .runBenches (callback)\n *\n * Will invoke the `.run` method of each\n * bench in this suite serially, taking into\n * account the delay option of the suite.\n *\n * @param {Function} callback\n * @name runBenches\n * @api public\n */\n\nRunner.prototype.runBenches = function (cb) {\n  var self = this\n    , suite = this.suite\n    , stats = []\n    , delay = suite.options.delay;\n\n  series(suite.benches, delay, function (bench, next) {\n    self.emit('bench start', bench);\n    bench.run(function (res) {\n      stats.push(res);\n      self.emit('bench end', res);\n      next();\n    });\n  }, function () {\n    self.emit('suite results', stats);\n    cb();\n  });\n};\n\n/**\n * .runSuites (callback)\n *\n * Will invoke the `.run` method of each\n * nested suite serially, taking into account\n * this suites delay between each suite.\n *\n * @param {Function} callback\n * @name runSuites\n * @api public\n */\n\nRunner.prototype.runSuites = function (done) {\n  var self = this\n    , suite = this.suite\n    , delay = suite.options.delay;\n\n  series(suite.suites, delay, function (suite, next) {\n    var runner = new Runner(suite);\n    proxy(runner, self, 'suite start');\n    proxy(runner, self, 'suite end');\n    proxy(runner, self, 'suite results');\n    proxy(runner, self, 'bench start');\n    proxy(runner, self, 'bench end');\n    self.emit('suite start', suite);\n    runner.run(function () {\n      self.stats.suites++;\n      self.emit('suite end', suite);\n      next();\n    });\n  }, done);\n};\n\n/**\n * .runBefore (callback)\n *\n * Will invoke each before hook of the current\n * suite serially. Will take into account async\n * and sync functions.\n *\n * @param {Function} callback\n * @name runBefore\n * @api public\n */\n\nRunner.prototype.runBefore = function (done) {\n  runHooks.call(this, this.suite.before, done);\n};\n\n/**\n * .runAfter (callback)\n *\n * Will invoke each after hook of the current\n * suite serially. Will take into account async\n * and sync functions.\n *\n * @param {Function} callback\n * @name runAfter\n * @api public\n */\n\nRunner.prototype.runAfter = function (done) {\n  runHooks.call(this, this.suite.after, done);\n};\n\n/*!\n * runHooks (hooks, callback)\n *\n * Private function to handle the actual serial\n * running of hooks for before and after this\n * suite.\n *\n * @param {Array} hook functions\n * @param {Functon} callback\n * @api private\n */\n\nfunction runHooks (hooks, done) {\n  series(hooks, function (fn, next) {\n    if (fn.length == 0) {\n      try {\n        fn();\n      } catch (err) {\n        return next(err);\n      }\n      next();\n    } else {\n      fn(next);\n    }\n  }, done);\n}\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/lib/matcha/utils.js":"\n/**\n * .series (arr[, delay], iterator[, done])\n *\n * Invoke an iterator for each emit in an array.\n * An optional delay can be placed in-between the\n * each item's invokation.\n *\n * @param {Array} items\n * @param {Number} delay in ms (optional)\n * @param {Function} iterator [item, next]\n * @param {Function} callback on completion (optional)\n * @api private\n */\n\nexports.series = function (arr, delay, iterator, done) {\n  if ('function' == typeof delay) {\n    done = iterator;\n    iterator = delay;\n    delay = 0;\n  }\n\n  done = done || function () {};\n\n  function iterate (i) {\n    var fn = arr[i];\n    if (!fn) return done();\n    iterator(fn, function cb(err) {\n      if (err) return done(err);\n      if (!delay) return iterate(++i);\n      setTimeout(function () {\n        iterate(++i);\n      }, delay);\n    });\n  };\n\n  iterate(0);\n};\n\n\nexports.color = function (str, color) {\n  var options = {\n      red:      '\\u001b[31m'\n    , green:    '\\u001b[32m'\n    , yellow:   '\\u001b[33m'\n    , blue:     '\\u001b[34m'\n    , magenta:  '\\u001b[35m'\n    , cyan:     '\\u001b[36m'\n    , gray:     '\\u001b[90m'\n    , reset:    '\\u001b[0m'\n  };\n  return options[color] + str + options.reset;\n};\n\nexports.highlight = function (str, color) {\n  var options = {\n      red:      '\\u001b[41m'\n    , green:    '\\u001b[42m'\n    , yellow:   '\\u001b[43m'\n    , blue:     '\\u001b[44m'\n    , magenta:  '\\u001b[45m'\n    , cyan:     '\\u001b[46m'\n    , gray:     '\\u001b[100m'\n    , reset:    '\\u001b[0m'\n  };\n  return options[color] + str + options.reset;\n};\n\nexports.padAfter = function (str, width) {\n  return str + Array(width - str.length).join(' ');\n};\n\nexports.padBefore = function (str, width) {\n  return Array(width - str.length).join(' ') + str;\n};\n\nexports.humanize = function (n) {\n  var n = String(n).split('.')\n  n[0] = n[0].replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n  return n.join('.')\n};\n\n// from mocha\nexports.cursor = {\n    hide: function () {\n      process.stdout.write('\\033[?25l');\n    }\n\n  , show: function () {\n      process.stdout.write('\\033[?25h');\n    }\n\n  , deleteLine: function () {\n      process.stdout.write('\\033[2K');\n    }\n\n  , beginningOfLine: function () {\n      process.stdout.write('\\033[0G');\n    }\n\n  , CR: function () {\n      exports.cursor.deleteLine();\n      exports.cursor.beginningOfLine();\n    }\n};\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/benchmark/array.js":"\nsuite('array slice', function () {\n  set('iterations', 2000000);\n\n  var arr = [1, 2, 3, 4, 5, 6];\n\n  bench('Array.prototype.slice', function () {\n    var args = Array.prototype.slice.call(arr, 1);\n  });\n\n  bench('for loop', function () {\n    var l = arr.length\n      , args = new Array(l - 1);\n    for (var i = 1; i < l; i++) args[i - 1] = arr[i];\n  });\n});\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/benchmark/async.js":"var nextTick = setImmediate || process.nextTick;\n\nvar bef = false;\nvar aft = false;\n\nsuite('async', function () {\n  set('mintime', 2000);\n\n  before(function(next) {\n    setTimeout(function() {\n      bef = true;\n      next();\n    }, 1000);\n  });\n\n  bench('setImmediate || nextTick', function (done) {\n    nextTick(done);\n  });\n\n  bench('setTimeout 1', function (done) {\n    setTimeout(done, 1);\n  });\n\n  after(function() {\n    aft = true;\n  });\n});\n\nprocess.on('exit', function() {\n  if (!bef) throw new Error('before did not run');\n  if (!aft) throw new Error('after did not run');\n});\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/benchmark/concat.js":"\nsuite('array concat', function () {\n  set('iterations', 10);\n\n  var arr1 = [ 'a', 'b', 'c' ]\n    , arr2 = [ 'd', 'e', 'f' ];\n\n  bench('concat', function () {\n    var arr3 = arr1.concat(arr2);\n  });\n\n  bench('for loop', function () {\n    var l1 = arr1.length\n      , l2 = arr2.length\n      , arr3 = Array(l1 + l2);\n    for (var i = 0; i < l1; i++) arr3[i] = arr1[i];\n    for (var i2 = 0; i2 < l2; i2++) arr3[i + i2] = arr2[i2];\n  });\n\n});\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/benchmark/error.js":"\n/*\nsuite('errors', function () {\n  before(function () {\n    throw new Error('before sync');\n  })\n  before(function (next) {\n    next(new Error('before async'));\n  });\n  bench('sync', function () {\n    throw new Error('sync');\n  });\n  bench('async', function () {\n    cb(new Error('async'));\n  });\n  after(function () {\n    throw new Error('after sync');\n  })\n  after(function (next) {\n    next(new Error('after async'));\n  });\n});\n*/\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/benchmark/existence.js":"\nsuite('existence', function () {\n  set('mintime', 1000);\n  var foo = { c: 'hey' }\n    , bar = { __proto__: foo, b: 'hey' }\n    , obj = { __proto__: bar, a: 'hey' };\n\n  before(function (done) {\n    setTimeout(done, 1000);\n  });\n\n  after(function (done) {\n    setTimeout(done, 1000);\n  });\n\n  bench('\\'bar\\' in foo', function(){\n    'a' in obj;\n    'b' in obj;\n    'c' in obj;\n  });\n\n  bench('foo.prop', function(){\n    obj.a;\n    obj.b;\n    obj.c;\n  });\n\n  bench('foo.hasOwnProperty()', function(){\n    obj.hasOwnProperty('a');\n    obj.hasOwnProperty('b');\n    obj.hasOwnProperty('c');\n  });\n});\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/benchmark/function.js":"\nsuite('function', function () {\n  function foo () {}\n\n  bench('foo()', function () {\n    foo(1,2,3);\n  });\n\n  bench('foo.call', function () {\n    foo.call(foo, 1, 2, 3);\n  });\n\n  bench('foo.apply', function () {\n    foo.apply(foo, [ 1, 2, 3 ]);\n  });\n});\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/benchmark/loop.js":"\nsuite('array loop', function () {\n  var arr = [ 1, 2, 3, 4, 5, 6 ];\n\n  bench('foo.forEach', function () {\n    var s = 0;\n    arr.forEach(function (n) {\n      s = s + n;\n    });\n  });\n\n  bench('for i in foo', function () {\n    var s = 0;\n    for (var i in arr) {\n      s = s + arr[i];\n    }\n  });\n\n  bench('for count', function () {\n    var s = 0;\n    for (var i = 1; i < arr.length; i++) {\n      s = s + arr[i];\n    }\n  });\n\n});\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/benchmark/single.js":"var i = 0;\n\nsuite('single', function() {\n  set('iterations', 1);\n  set('type', 'static');\n\n  bench('i', function() {\n    i++;\n  });\n});\n\nprocess.on('exit', function() {\n  if (1 !== i) throw new Error('single ran for ' + i + ' iterations');\n});\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/benchmark/type.js":"\nsuite('array type', function () {\n  set('iterations', 2000000);\n\n  var arr = [];\n\n  bench('Array.isArray', function () {\n    var isArray = Array.isArray(arr);\n  });\n\n  bench('Object.prototype.toString.call', function () {\n    var isArray = ('[object Array]' == Object.prototype.toString.call(arr));\n  });\n});\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/lib/matcha/interface.js":"/*!\n * Matcha - Interface Manager\n * Copyright(c) 2011-2012 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Internal Dependancies\n */\n\nvar interfaces = require('./interfaces');\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = Interface;\n\n/**\n * Interface (constructor)\n *\n * The Interface manager handles mounting\n * and unmounting of exposed interface functions\n * to the `global` or other mountpoint for a root\n * suite run.\n *\n * @param {Suite} root suite\n * @param {Object} options\n * @api public\n */\n\nfunction Interface (suite, opts) {\n  opts = opts || {};\n  this.suite = suite;\n  this.style = opts.style || 'bdd';\n  this.mountpoint = opts.mountpoint || global;\n  mountApi.call(this);\n}\n\n/**\n * .mount (point, function)\n *\n * Mount a function to a given point on the\n * current interface mount object (such as global).\n *\n * @param {String} mount point\n * @param {Function} callback function\n * @api public\n */\n\nInterface.prototype.mount = function (point, fn) {\n  this.mountpoint[point] = fn;\n};\n\n/**\n * .unmount (point)\n *\n * Unmount a given point on the current interface\n * mount object (such as global).\n *\n * @param {String} mount point\n * @api public\n */\n\nInterface.prototype.unmount = function (point) {\n  delete this.mountpoint[point];\n};\n\n/*!\n * mountApi ()\n *\n * Load the selected interface style and initialize\n * it for use with this interface.\n *\n * @api private\n */\n\nfunction mountApi () {\n  var style = this.style;\n  if ('function' === typeof style) {\n    style(this);\n  } else {\n    var fn = interfaces[style];\n    if (!fn) throw new Error('Unable to load interface \\'' + style + '\\'.');\n    fn(this);\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/lib/matcha/interfaces/index.js":"exports.bdd = require('./bdd');\nexports.exports = require('./exports');\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/lib/matcha/interfaces/bdd.js":"/*!\n * Matcha - BDD Interface\n * Copyright(c) 2012 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Internal Dependancies\n */\n\nvar Suite = require('../suite')\n  , Bench = require('../bench');\n\n/*!\n * Primary Export\n */\n\nmodule.exports = function (interface) {\n  var suite = interface.suite\n    , suites = [ suite ];\n\n  /*!\n   * Listen for pre-requires to a specific file.\n   */\n\n  suite.on('pre-require', function () {\n\n    /**\n     * ### suite (fn)\n     *\n     * Define a new suite. Note that suites\n     * can not be nested. A suite can contain\n     * have it's options `set` as well as\n     * infinitely defined benches.\n     *\n     * @param {Function} suite definition\n     * @api public\n     * @name suite\n     */\n\n    function suiteMount (title, fn) {\n      var suite = Suite.create(suites[0], title);\n      suites.unshift(suite);\n      interface.unmount('suite');\n      fn();\n      suites.shift(suite);\n      interface.mount('suite', suiteMount);\n    }\n\n    interface.mount('suite', suiteMount);\n\n    /**\n     * ### set (key, value)\n     *\n     * Set an option for the current suite.\n     *\n     * @param {String} key\n     * @param {Mixed} value\n     * @api public\n     * @name set\n     */\n\n    interface.mount('set', function (key, value) {\n      suites[0].setOption(key, value);\n    });\n\n    /**\n     * ### before (fn)\n     *\n     * A function that should be run before\n     * the current suite.\n     *\n     * @param {Function} before function\n     * @api public\n     * @name before\n     */\n\n    interface.mount('before', function (fn) {\n      suites[0].addBefore(fn);\n    });\n\n    /**\n     * ### after (fn)\n     *\n     * A function that should be run after\n     * the current suite.\n     *\n     * @param {Function} after function\n     * @api public\n     * @name after\n     */\n\n    interface.mount('after', function (fn) {\n      suites[0].addAfter(fn);\n    });\n\n    /**\n     * ### bench (fn)\n     *\n     * Define a new bench function.\n     *\n     * @param {Function} bench definition\n     * @api public\n     * @name bench\n     */\n\n    interface.mount('bench', function (title, fn) {\n      suites[0].addBench(new Bench(title, fn));\n    });\n\n    /**\n     * ### xsuite (fn)\n     *\n     * Helper to temporarily disable a suite.\n     *\n     * @api public\n     * @name xsuite\n     */\n\n    interface.mount('xsuite', function () {});\n\n    /**\n     * ### xbench (fn)\n     *\n     * Helper to temporarily disable a bench.\n     *\n     * @api public\n     * @name xbench\n     */\n\n    interface.mount('xbench', function () {});\n\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-matcha/node_modules/matcha/lib/matcha/interfaces/exports.js":"/*!\n * Matcha - Exports Interface\n * Copyright(c) 2012 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Internal Dependancies\n */\n\nvar Suite = require('../suite')\n  , Bench = require('../bench');\n\n/*!\n * Primary Export\n */\n\nmodule.exports = function (interface) {\n  var suite = interface.suite\n    , suites = [ suite ];\n\n  /*!\n   * Listen for require with given spec\n   */\n\n  suite.on('require', function (spec) {\n\n    /*!\n     * setOptions\n     *\n     * Set options based on the `options`\n     * object for a given suite.\n     *\n     * @api private\n     */\n\n    function setOptions (suite, opts) {\n      for (var key in opts) {\n        suite.setOption(key, opts[key]);\n      }\n    }\n\n    /*!\n     * setBefore\n     *\n     * Set before functions based on function\n     * or array of functions for a given suite.\n     *\n     * @api private\n     */\n\n    function setBefore (suite, before) {\n      if (!Array.isArray(before)) before = [ before ];\n      before.forEach(suite.addBefore.bind(suite));\n    }\n\n    /*!\n     * setAfter\n     *\n     * Set functions based on function\n     * or array of functions for a given suite.\n     *\n     * @api private\n     */\n\n    function setAfter (suite, after) {\n      if (!Array.isArray(after)) after = [ after ];\n      after.forEach(suite.addAfter.bind(suite));\n    }\n\n    /*!\n     * setBench\n     *\n     * Set benches based on benches object\n     * of attributed functions for a given suite.\n     *\n     * @api private\n     */\n\n    function setBench (suite, benches) {\n      for (var title in benches) {\n        suite.addBench(new Bench(title, benches[title]));\n      }\n    }\n\n    /*!\n     * Parse the incoming file\n     */\n\n    for (var _suite in spec) {\n      var suite = Suite.create(suites[0], _suite)\n        , def = spec[_suite];\n      if (def.options) setOptions(suite, def.options);\n      if (def.before) setBefore(suite, def.before);\n      if (def.after) setAfter(suite, def.after);\n      if (def.bench) setBench(suite, def.bench);\n    }\n\n  });\n};\n"}